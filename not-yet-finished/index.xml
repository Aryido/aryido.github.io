<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Not-yet-finisheds on Aryido Tech Note</title><link>https://aryido.github.io/not-yet-finished/</link><description>Recent content in Not-yet-finisheds on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Oct 2024 00:23:58 +0800</lastBuildDate><atom:link href="https://aryido.github.io/not-yet-finished/index.xml" rel="self" type="application/rss+xml"/><item><title>GCP - 概述</title><link>https://aryido.github.io/not-yet-finished/shared-responsibility/</link><pubDate>Mon, 14 Oct 2024 00:23:58 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/shared-responsibility/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>對應到其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : ****&lt;/li>
&lt;li>Microsoft Azure : ****&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>GCP - Cloud Build 概述</title><link>https://aryido.github.io/not-yet-finished/cloud-build/</link><pubDate>Sun, 13 Oct 2024 23:50:08 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/cloud-build/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>對應到其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : ****&lt;/li>
&lt;li>Microsoft Azure : ****&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>GCP - 概述</title><link>https://aryido.github.io/not-yet-finished/dataproc/</link><pubDate>Fri, 11 Oct 2024 20:21:20 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/dataproc/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>對應到其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : ****&lt;/li>
&lt;li>Microsoft Azure : ****&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>GCP - Cloud VPN &amp; Cloud Interconnect 概述</title><link>https://aryido.github.io/not-yet-finished/cloud-vpn/</link><pubDate>Thu, 10 Oct 2024 18:18:34 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/cloud-vpn/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud VPN 全稱是 Cloud Virtual Private Network，能夠將 On-premise Network 和 GCP VPC Network 連接在一起，流量透過 IPSec 協議進行加密。而 Cloud Interconnect 可以說是加強版的 Cloud VPN，它是真的從你 On-premise 的設備做&lt;strong>一個實體的線路&lt;/strong>，一直到 Google 的機房裡面。兩個分別對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Cloud VPN
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>AWS VPN&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure VPN&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Cloud Interconnect
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>AWS Direct Connect&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure ExpressRoute&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>gcloud CLI 概述 II - Authorize the gcloud CLI</title><link>https://aryido.github.io/not-yet-finished/gcp-cli-2/</link><pubDate>Sat, 28 Sep 2024 21:25:48 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/gcp-cli-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>我們經常會透過 gcloud CLI 和 GCP 的雲端資源互動，為了能夠 Access 到 GCP 的雲端資源，就必須 authorize gcloud CLI，提供了兩個方式來 grant authorization 到 gcloud CLI :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>User account&lt;/strong>: 代表「 End-user 」，是最常見的使用案例也是 best practice&lt;/li>
&lt;li>&lt;strong>Service account&lt;/strong>: 是關聯到 Project 代表「 Application 」而不是「人」的使用者&lt;/li>
&lt;/ul>
&lt;p>無論是 User account 和 Service account ，這兩個都屬於 Google Account 類型並且可以加入到 GCP IAM 成為一個 Principal，授權流程是使用 OAuth2 進行，授權成功之後就會有對應 Access 權限，可用來操作雲端資源了。&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - Identity and Access Management</title><link>https://aryido.github.io/not-yet-finished/iam/</link><pubDate>Mon, 16 Sep 2024 19:23:44 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/iam/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>GCP - Pub/Sub 概述 I - 架構</title><link>https://aryido.github.io/not-yet-finished/pubsub-2/</link><pubDate>Sat, 17 Aug 2024 23:18:06 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/pubsub-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>GCP - Bigquery 概述 II -</title><link>https://aryido.github.io/not-yet-finished/bigquery-2/</link><pubDate>Sun, 11 Aug 2024 02:18:34 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/bigquery-2/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>BigQuery 除了可以把資料以 columnar storage format 儲存進 BigQuery 內後進行查詢分析，也&lt;strong>支持直接查詢外部資料來源&lt;/strong>如 GCS、Bigtable 、 Spanner/SQL 、 Google Sheets 等等&lt;/p>
&lt;/blockquote></description></item><item><title>GCP - Cloud SQL 連線</title><link>https://aryido.github.io/not-yet-finished/sql-connection/</link><pubDate>Sat, 03 Aug 2024 23:33:55 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/sql-connection/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>NAT 概述</title><link>https://aryido.github.io/not-yet-finished/nat/</link><pubDate>Tue, 02 Jul 2024 20:18:34 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/nat/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Cloud NAT 全稱是 Cloud Network Address Translation，是 Google Cloud 代管的 IP 轉譯服務，可在不公開 IP 位址的情況下，讓「某些 GCP 資源」可以高效的&lt;strong>連接上&lt;/strong>「外部網路 Internet」，而外部資源無法直接存取 Cloud NAT gateway 後方的資源，維持獨立性與安全性。對應其他的雲端服務是 :&lt;/p>
&lt;ul>
&lt;li>Amazon Web Services (AWS) : &lt;strong>NAT gateways&lt;/strong>&lt;/li>
&lt;li>Microsoft Azure : &lt;strong>Azure NAT Gateway&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Cloud NAT 是以 Software-defined Networking 服務，中間不存在 proxy instance ，故性能方面比傳統 NAT 好，目前最經常是用在 VM、GKE 上，除此之外也提供 Cloud Run、Cloud Functions、App Engine 等服務，能夠透過&lt;strong>共用&lt;/strong>一組 IP 位址對外通訊，建立 NAT gateways 連線到 VPC 外部網路，由於&lt;strong>共用&lt;/strong>一組 IP，也解決了 IP 短缺問題。&lt;/p>
&lt;/blockquote></description></item><item><title>DNS 概述</title><link>https://aryido.github.io/not-yet-finished/dns/</link><pubDate>Mon, 24 Jun 2024 23:26:00 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/dns/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>Cloud NAT 概述</title><link>https://aryido.github.io/not-yet-finished/cloud-nat/</link><pubDate>Thu, 30 May 2024 18:52:24 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/cloud-nat/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>PaaS、IaaS、SaaS、CaaS 介紹</title><link>https://aryido.github.io/not-yet-finished/iaas-paas-saas-caas/</link><pubDate>Wed, 22 May 2024 23:41:17 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/iaas-paas-saas-caas/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>Elasticsearch 基礎介紹</title><link>https://aryido.github.io/not-yet-finished/elasticsearch-intro/</link><pubDate>Sun, 21 Jan 2024 22:47:34 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/elasticsearch-intro/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Elasticsearch 是一款開源的分佈式搜索引擎，也是一個分佈式資料庫。底層是基於 Lucene 開發，另外 ES 來提供了 RESTful API 風格的接口、支持分佈式、可水平擴展。除了進行全文檢索( full-text search )；倒排索引 (Inverted index)，也支持聚合以及排序操作。&lt;/p>
&lt;/blockquote></description></item><item><title>322. Coin Change</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode322/</link><pubDate>Sun, 24 Dec 2023 23:14:10 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode322/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>這題是著名的&lt;strong>零錢兌換&lt;/strong>問題，給我們一些可用的硬幣面額，問&lt;strong>最少&lt;/strong>能用幾個硬幣來兌換出來。標準解法是用 Dynamic Programming 。比較需要知道的地方，是初見時都會想使用 Greedy 方法來做，也就是從最大的 coin 面額拿最多的硬幣開始，如果這個數目無法滿足，那麼從最大的面額數目減一，再重複步驟。但這個解法是錯的 ! 因為&lt;strong>不保證大面額硬幣拿最多的數目就是最佳解&lt;/strong>&amp;hellip;&lt;/p>
&lt;/blockquote></description></item><item><title>B Tree</title><link>https://aryido.github.io/not-yet-finished/b-tree/</link><pubDate>Sat, 25 Nov 2023 16:23:31 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/b-tree/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>B-tree 是一種自平衡的樹，能夠保持資料的有序性，能讓搜尋、插入、刪除都在 logN 時間內完成。B-tree 是一個廣義化的 binary search tree，可以擁有多於 2 的 sub-Node。
B-tree 與自平衡 binary search tree 最大不同，是 B-tree 做了讀寫操作做的優化，減少定位記錄時所經歷的中間過程，從而加快存取速度。常應用在 database 和 file-system 實現上。&lt;/p>
&lt;/blockquote></description></item><item><title>Leetcode216</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode216/</link><pubDate>Tue, 17 Oct 2023 23:29:29 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode216/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>90. Subsets II</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode90/</link><pubDate>Tue, 17 Oct 2023 23:01:42 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode90/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>是經典的 78. Subsets 的進階版，現在數字會有重複(duplicate) 。&lt;/p>
&lt;/blockquote></description></item><item><title>Protobuf &amp; Avro</title><link>https://aryido.github.io/not-yet-finished/protobuf-avro/</link><pubDate>Sat, 02 Sep 2023 20:05:20 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/protobuf-avro/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>在現實情境中，data 的設計總是會不斷變化。故我們都會希望可以變成&lt;strong>能夠快速添加或刪除一些 field&lt;/strong>，但不影響太多系統的設計。目前 Protobuf 和 Avro 都支持 schema reversion，它允許你在不同的時間獨立地更新系統的不同組件，而不用擔心兼容性問題。&lt;/p>
&lt;/blockquote></description></item><item><title>Leetcode713</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode713/</link><pubDate>Fri, 01 Sep 2023 00:13:42 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode713/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>234. Palindrome Linked List</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode234/</link><pubDate>Sat, 26 Aug 2023 01:13:14 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode234/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;/blockquote></description></item><item><title>Kubernetes: Container Network Interface</title><link>https://aryido.github.io/not-yet-finished/network-cni/</link><pubDate>Sun, 25 Jun 2023 21:12:29 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/network-cni/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Container Network Interface（CNI）的基本思想，是先創建好網路命名空間 （netns） ，然後調用外掛程式，替這個網路命名空間配置網路，之後再啟動容器內的進程。 CNI 通過 Json Schema 描述當前容器網路的配置，實現標準化。專注於&lt;/p>
&lt;ul>
&lt;li>創建容器時分配 IP、網段等等&lt;/li>
&lt;li>容器被回收時刪除網路資源&lt;/li>
&lt;/ul>
&lt;p>CNI 作為 Kubernetes 和底層網路之間的一個抽象存在，遮罩了底層網路實現的細節、實現了 Kubernetes 和具體網路實現方案的解耦。&lt;/p>
&lt;/blockquote></description></item><item><title>Kubernetes Deployments: Rolling vs Canary vs Blue-Green</title><link>https://aryido.github.io/not-yet-finished/canary/</link><pubDate>Wed, 17 May 2023 00:26:34 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/canary/</guid><description>Canary Deployment 實施流程範例 apiVersion: apps/v1 kind: Deployment metadata: name: myapp-deployment spec: replicas: 3 selector: matchLabels: app: myapp template: metadata: labels: app: myapp spec: containers: - name: myapp-container image: myapp:v1 ports: - containerPort: 8080 readinessProbe: httpGet: path: / port: 8080 initialDelaySeconds: 5 periodSeconds: 5 livenessProbe: httpGet: path: / port: 8080 initialDelaySeconds: 10 periodSeconds: 10 在範例 yaml 中，使用的 image 是 myapp：v1，其中 replicas 先設 3 個來模擬狀況；比較重要的是要加個 health check 來檢查運行狀況，如果這些探測中的任何一個失敗，Pod 將重新啟動 :
readyinessProbe 檢查容器是否已準備好接收流量 livenessProbe 檢查容器是否仍在運行。 若要執行 Canary Deployment，要創建第二個 deployment yaml 檔，並且使用的 image 是 myapp：v2 新版。然後 :</description></item><item><title>Avro 簡介</title><link>https://aryido.github.io/not-yet-finished/avro/</link><pubDate>Sun, 23 Apr 2023 15:27:54 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/avro/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Avro 是一個 data serialization 框架 ，為 Apache Hadoop 下的一個子項目，定義一個可跨多種程式語言和平台的&lt;strong>傳輸資料格式&lt;/strong>。Avro 可使用 JSON 格式來描述 data structure，並且支持&lt;strong>架構演進&lt;/strong>，保持向後/向前的相容性。 Avro 也提供了編解碼和二進制格式，使得在高吞吐量的應用場景中非常有用且高效。&lt;/p>
&lt;/blockquote></description></item><item><title>Docker File</title><link>https://aryido.github.io/not-yet-finished/docker-file/</link><pubDate>Sat, 08 Apr 2023 12:50:16 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/docker-file/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>Dockerfile 是一個設定檔，讓我們可以透過指令的設定，快速地更新或建構 Container 的環境。由於 Dockerfile 中可以清楚的知道映像檔的組成，因此，在安全性上會有所提升，也因為是純文字檔，所以檔案很小、很容易分享。Dockerfile 可以看成是一個腳本，他用來明確告訴 Docker build 指令產生新的 Image 時候，所需的資訊和步驟。Dockerfile 會提供 Docker 引擎建立容器映射所需的指示。這些指令會依序逐一執行。&lt;/p>
&lt;/blockquote></description></item><item><title>Docker - 基本操作</title><link>https://aryido.github.io/not-yet-finished/docker-cli/</link><pubDate>Thu, 06 Apr 2023 20:53:33 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/docker-cli/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>虛擬化技術 :&lt;/p>
&lt;ul>
&lt;li>系統層級虛擬化（Virtual machine ) ，例如 Virtual Box&lt;/li>
&lt;li>作業系統層級虛擬化（Container），立如 Docker&lt;/li>
&lt;/ul>
&lt;p>Docker 是一個 software platform ，可讓我們快速構建、測試和部署應用程式。Docker 將軟體打包到標準化單元中，這些單元包含軟體運行所需的一切，包括 libraries 、 system tools 、code 等等。Docker 的基本哲學 &lt;strong>Build and Ship any Application Anywhere&lt;/strong> 。&lt;/p>
&lt;/blockquote></description></item><item><title>Leetcode83</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode83/</link><pubDate>Sun, 18 Dec 2022 21:50:23 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode83/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>78. Subsets</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode78/</link><pubDate>Sun, 06 Nov 2022 22:54:12 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode78/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>這題是很經典的問題: &lt;strong>冪集 power set&lt;/strong> ，在數學上還蠻常見到的，理論上求得解答方式也很簡單，選或者不選就可以得出。但在程式上卻有點點難度，會被歸類到 Medium 等級。這邊使用 backtrack 模板來解題，但其實也有非遞回式的解法，都可看看並練習。&lt;/p>
&lt;/blockquote></description></item><item><title>Leetcode102</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode102/</link><pubDate>Sun, 30 Oct 2022 19:54:09 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode102/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Leetcode130</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode130/</link><pubDate>Sun, 23 Oct 2022 14:27:33 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode130/</guid><description>&lt;!-- raw HTML omitted --></description></item><item><title>Leetcode819</title><link>https://aryido.github.io/not-yet-finished/leetcode/leetcode819/</link><pubDate>Mon, 10 Oct 2022 15:31:46 +0800</pubDate><guid>https://aryido.github.io/not-yet-finished/leetcode/leetcode819/</guid><description>&lt;!-- raw HTML omitted --></description></item></channel></rss>