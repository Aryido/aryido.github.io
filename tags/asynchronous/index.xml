<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>asynchronous on Aryido Tech Note</title><link>https://aryido.github.io/tags/asynchronous/</link><description>Recent content in asynchronous on Aryido Tech Note</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Mar 2025 19:27:31 +0800</lastBuildDate><atom:link href="https://aryido.github.io/tags/asynchronous/index.xml" rel="self" type="application/rss+xml"/><item><title>淺談 Process、Thread - 很重要的面試八股文</title><link>https://aryido.github.io/posts/develop/process-thread/</link><pubDate>Thu, 13 Mar 2025 19:27:31 +0800</pubDate><guid>https://aryido.github.io/posts/develop/process-thread/</guid><description>&lt;!-- raw HTML omitted -->
&lt;blockquote>
&lt;p>電腦運行時&lt;strong>任務的的單元是什麼呢&lt;/strong>？ 這個涉及了「程式(Program)」、「進程(Process)」、「線程(Thread)」的概念，是面試時經常會被問到的題目，首先&lt;strong>默念默背&lt;/strong>一下教科書上 Process 和 Thread 的簡單定義：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Process： 資源分配的最小單位&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Thread： CPU 執行的最小單位&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>在實際生活中如點開一個聊天應用程式，這就是將 Program 活化成 Process 的例子，因此我們可以在電腦的資源管理器 Monitor 中看到 PID (Process ID) ; 再繼續以聊天室 Process 為例，我們可以同時「接受對方傳來的訊息」以及「發送自己的訊息給對方」，這就是同個 Process 中不同 Thread 的功勞。&lt;/p>
&lt;/blockquote></description></item></channel></rss>